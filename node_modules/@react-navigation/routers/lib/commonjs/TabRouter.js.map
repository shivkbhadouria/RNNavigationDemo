{"version":3,"sources":["TabRouter.tsx"],"names":["TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","history","key","unshift","i","changeIndex","state","currentKey","filter","it","concat","TabRouter","initialRouteName","router","BaseRouter","getInitialState","routeNames","routeParamList","undefined","includes","indexOf","map","stale","getRehydratedState","partialState","route","find","r","Math","min","max","length","getStateForRouteNamesChange","getStateForRouteFocus","findIndex","getStateForAction","action","previousKey","slice","shouldActionChangeFocus","actionCreators"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\nimport {\n  CommonAction,\n  BaseRouter,\n  PartialState,\n  NavigationState,\n  DefaultRouterOptions,\n  Router,\n  Route,\n} from '@react-navigation/core';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior = 'initialRoute' | 'order' | 'history' | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState = Omit<NavigationState, 'history'> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n\n  switch (backBehavior) {\n    case 'initialRoute':\n      if (index !== 0) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[0].key });\n      }\n      break;\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState,\n  index: number,\n  backBehavior: BackBehavior\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter(it => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(state.routes, index, backBehavior);\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'history',\n}: TabRouterOptions) {\n  const router: Router<TabNavigationState, TabActionType | CommonAction> = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map(name => ({\n        name,\n        key: `${name}-${shortid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(routes, index, backBehavior);\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map(name => {\n        const route = (state as PartialState<TabNavigationState>).routes.find(\n          r => r.name === name\n        );\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${shortid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(\n          typeof state.index === 'number'\n            ? state.index\n            : routeNames.indexOf(state.routes[0].name),\n          0\n        ),\n        routes.length - 1\n      );\n\n      let history = state.history?.filter(it =>\n        routes.find(r => r.key === it.key)\n      );\n\n      if (!history?.length) {\n        history = getRouteHistory(routes, index, backBehavior);\n      }\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        name =>\n          state.routes.find(r => r.name === name) || {\n            name,\n            key: `${name}-${shortid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(it =>\n        routes.find(r => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(routes, index, backBehavior);\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior);\n    },\n\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              route => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              route => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes:\n                action.payload.params !== undefined\n                  ? state.routes.map((route, i) =>\n                      i === index\n                        ? {\n                            ...route,\n                            params: {\n                              ...route.params,\n                              ...action.payload.params,\n                            },\n                          }\n                        : route\n                    )\n                  : state.routes,\n            },\n            index,\n            backBehavior\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            route => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]}